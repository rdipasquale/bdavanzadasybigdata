
# ===============================
# = DATA SOURCE
# ===============================
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.url=jdbc:h2:mem:db;DB_CLOSE_DELAY=-1
spring.datasource.username=sa
spring.datasource.password=sa

spring.datasource.pool-prepared-statements=true
spring.datasource.max-open-prepared-statements=250

logging.level.org.springframework=INFO
logging.level.com.mkyong=INFO
logging.level.com.zaxxer=DEBUG
logging.level.root=ERROR

spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=20
spring.datasource.hikari.poolName=HikariPoolZZZ

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.hikari.testWhileIdle = true
spring.datasource.hikari.validationQuery = SELECT 1 
spring.datasource.hikari.max-idle=8
spring.datasource.hikari.min-idle=2
spring.datasource.hikari.initial-size=2
spring.datasource.hikari.test-on-borrow=true
spring.datasource.hikari.test-on-return=false
spring.datasource.hikari.maxLifetime=2000000
spring.datasource.hikari.connectionTimeout=30000
spring.datasource.hikari.idleTimeout=30000

spring.dao.exceptiontranslation.enabled=true


# ===============================
# = JPA / HIBERNATE
# ===============================
# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).
# Show or not log for each sql query
spring.jpa.show-sql = true

# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = create

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.H2Dialect

spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
spring.data.rest.basePath=/api

